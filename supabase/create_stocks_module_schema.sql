-- =====================================================================
-- MIGRAÇÃO: MÓDULO DE AÇÕES AMERICANAS - SCHEMA NORMALIZADO
-- Data: 2025-01-29
-- Objetivo: Criar tabelas normalizadas para suportar 2.000+ ações americanas
-- Fontes: yfinance (dados) + Perplexity AI (validação/insights)
-- =====================================================================

-- 1. TABELA MASTER DE ASSETS (Compartilhada ETFs + Stocks)
CREATE TABLE IF NOT EXISTS assets_master (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  ticker TEXT NOT NULL UNIQUE,
  asset_type TEXT NOT NULL CHECK (asset_type IN ('ETF','STOCK')),
  name TEXT,
  exchange TEXT,
  sector TEXT,
  industry TEXT,
  currency TEXT DEFAULT 'USD',
  created_at TIMESTAMPTZ DEFAULT now(),
  updated_at TIMESTAMPTZ DEFAULT now()
);

-- 2. PREÇOS DIÁRIOS (Timeseries - Separado para performance)
CREATE TABLE IF NOT EXISTS stock_prices_daily (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id BIGINT NOT NULL REFERENCES assets_master(id) ON DELETE CASCADE,
  date DATE NOT NULL,
  open NUMERIC(12,4),
  high NUMERIC(12,4),
  low NUMERIC(12,4),
  close NUMERIC(12,4),
  adj_close NUMERIC(12,4),
  volume BIGINT,
  created_at TIMESTAMPTZ DEFAULT now(),
  UNIQUE(asset_id, date)
);

-- 3. MÉTRICAS SNAPSHOT (Recalculadas diariamente para Screener/Rankings)
CREATE TABLE IF NOT EXISTS stock_metrics_snapshot (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id BIGINT NOT NULL REFERENCES assets_master(id) ON DELETE CASCADE,
  snapshot_date DATE NOT NULL DEFAULT CURRENT_DATE,
  
  -- Preços & Volume
  current_price NUMERIC(12,4),
  market_cap BIGINT,
  shares_outstanding BIGINT,
  float_shares BIGINT,
  volume_avg_30d BIGINT,
  
  -- Returns (Equivalentes aos ETFs)
  returns_1d NUMERIC(8,4),
  returns_1w NUMERIC(8,4),
  returns_1m NUMERIC(8,4),
  returns_3m NUMERIC(8,4),
  returns_6m NUMERIC(8,4),
  returns_12m NUMERIC(8,4),
  returns_24m NUMERIC(8,4),
  returns_36m NUMERIC(8,4),
  returns_5y NUMERIC(8,4),
  ten_year_return NUMERIC(8,4),
  
  -- Métricas de Risco
  volatility_12m NUMERIC(8,4),
  volatility_24m NUMERIC(8,4),
  volatility_36m NUMERIC(8,4),
  ten_year_volatility NUMERIC(8,4),
  sharpe_12m NUMERIC(8,4),
  sharpe_24m NUMERIC(8,4),
  sharpe_36m NUMERIC(8,4),
  ten_year_sharpe NUMERIC(8,4),
  max_drawdown NUMERIC(8,4),
  beta_12m NUMERIC(8,4),
  
  -- Dividendos
  dividend_yield_12m NUMERIC(8,4),
  dividend_yield_ttm NUMERIC(8,4),
  dividends_12m NUMERIC(8,4),
  dividend_growth_5y NUMERIC(8,4),
  
  -- Métricas Técnicas
  rsi_14d NUMERIC(5,2),
  ma_50d NUMERIC(12,4),
  ma_200d NUMERIC(12,4),
  price_to_ma50 NUMERIC(6,4),
  price_to_ma200 NUMERIC(6,4),
  
  -- Ratings & Categorização
  size_category TEXT, -- Large, Mid, Small Cap
  liquidity_category TEXT, -- High, Medium, Low
  growth_category TEXT, -- Growth, Value, Blend
  quality_score INTEGER, -- 0-100
  
  -- Auditoria
  source_meta JSONB, -- Origem dos dados (yfinance, calculated)
  validation_meta JSONB, -- Validação via Perplexity
  calculated_at TIMESTAMPTZ DEFAULT now(),
  
  UNIQUE(asset_id, snapshot_date)
);

-- 4. FUNDAMENTOS TRIMESTRAIS (Separado para não misturar com métricas diárias)
CREATE TABLE IF NOT EXISTS stock_fundamentals_quarterly (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id BIGINT NOT NULL REFERENCES assets_master(id) ON DELETE CASCADE,
  quarter_date DATE NOT NULL,
  
  -- Valuation Ratios
  pe_ratio NUMERIC(8,2),
  peg_ratio NUMERIC(8,2),
  pb_ratio NUMERIC(8,2),
  ps_ratio NUMERIC(8,2),
  ev_ebitda NUMERIC(8,2),
  
  -- Profitability
  roe NUMERIC(8,4), -- Return on Equity
  roa NUMERIC(8,4), -- Return on Assets
  roic NUMERIC(8,4), -- Return on Invested Capital
  gross_margin NUMERIC(8,4),
  operating_margin NUMERIC(8,4),
  net_margin NUMERIC(8,4),
  
  -- Financial Health
  debt_to_equity NUMERIC(8,4),
  current_ratio NUMERIC(8,4),
  quick_ratio NUMERIC(8,4),
  
  -- Growth Metrics
  revenue_growth_yoy NUMERIC(8,4),
  earnings_growth_yoy NUMERIC(8,4),
  
  -- Raw Financial Data
  revenue BIGINT,
  net_income BIGINT,
  total_debt BIGINT,
  cash_and_equivalents BIGINT,
  
  -- Auditoria
  source_meta JSONB,
  created_at TIMESTAMPTZ DEFAULT now(),
  
  UNIQUE(asset_id, quarter_date)
);

-- 5. INSIGHTS DE IA (Análises qualitativas via Perplexity)
CREATE TABLE IF NOT EXISTS stock_ai_insights (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  asset_id BIGINT NOT NULL REFERENCES assets_master(id) ON DELETE CASCADE,
  insight_date DATE NOT NULL DEFAULT CURRENT_DATE,
  
  -- Insights Estruturados (compatível com ETFs)
  ai_investment_thesis TEXT,
  ai_risk_analysis TEXT,
  ai_market_context TEXT,
  ai_competitive_analysis TEXT,
  ai_growth_prospects TEXT,
  
  -- Análises Específicas de Ações
  ai_management_quality TEXT,
  ai_financial_health TEXT,
  ai_industry_outlook TEXT,
  ai_esg_analysis TEXT,
  
  -- Dados Estruturados
  ai_insights_json JSONB, -- Insights granulares
  ai_context_json JSONB, -- Contexto de mercado
  analyst_consensus JSONB, -- Consenso de analistas
  news_sentiment JSONB, -- Sentiment de notícias
  
  -- Scores de IA
  ai_quality_score INTEGER, -- 0-100
  ai_growth_score INTEGER, -- 0-100
  ai_value_score INTEGER, -- 0-100
  ai_momentum_score INTEGER, -- 0-100
  
  -- Auditoria
  perplexity_sources JSONB, -- URLs das fontes
  firecrawl_data JSONB, -- Dados capturados
  generated_at TIMESTAMPTZ DEFAULT now(),
  
  UNIQUE(asset_id, insight_date)
);

-- 6. MATERIALIZED VIEW COMPATÍVEL (Espelha etfs_ativos_reais)
CREATE MATERIALIZED VIEW IF NOT EXISTS stocks_ativos_reais AS
SELECT 
  am.ticker as symbol,
  am.name,
  CONCAT(am.name, ' (', am.exchange, ':', am.ticker, ')') as description,
  NULL as isin, -- N/A para ações
  am.sector as assetclass,
  NULL as securitycusip, -- N/A para ações
  'US' as domicile, -- Ações americanas
  NULL as website,
  NULL as etfcompany, -- N/A para ações
  NULL as expenseratio, -- N/A para ações (usar expense ratio = 0)
  sms.market_cap as totalasset,
  sms.volume_avg_30d as avgvolume,
  NULL as inceptiondate, -- N/A para ações
  sms.current_price as nav,
  'USD' as navcurrency,
  NULL as holdingscount, -- N/A para ações
  sms.calculated_at as updatedat,
  JSONB_BUILD_OBJECT('sector', am.sector, 'industry', am.industry) as sectorslist,
  
  -- Returns (mesmo padrão dos ETFs)
  sms.returns_12m,
  sms.returns_24m,
  sms.returns_36m,
  sms.returns_5y,
  sms.ten_year_return,
  
  -- Volatilidade
  sms.volatility_12m,
  sms.volatility_24m,
  sms.volatility_36m,
  sms.ten_year_volatility,
  
  -- Sharpe
  sms.sharpe_12m,
  sms.sharpe_24m,
  sms.sharpe_36m,
  sms.ten_year_sharpe,
  
  -- Risco
  sms.max_drawdown,
  
  -- Dividendos
  sms.dividends_12m,
  NULL as dividends_24m, -- Calcular se necessário
  NULL as dividends_36m, -- Calcular se necessário
  NULL as dividends_all_time, -- Calcular se necessário
  
  -- Categorização
  sms.size_category,
  sms.liquidity_category,
  'STOCK' as etf_type, -- Diferenciador
  sms.liquidity_category as liquidity_rating,
  sms.size_category as size_rating,
  
  -- Campos específicos de ações (novos)
  sms.market_cap,
  sms.dividend_yield_12m,
  sms.pe_ratio,
  sms.beta_12m,
  sms.quality_score,
  
  -- IA Insights (compatível com ETFs)
  sai.ai_investment_thesis,
  sai.ai_risk_analysis,
  sai.ai_market_context,
  sai.ai_insights_json,
  sai.ai_quality_score,
  sai.ai_growth_score,
  sai.ai_value_score,
  sai.ai_momentum_score

FROM assets_master am
LEFT JOIN stock_metrics_snapshot sms ON am.id = sms.asset_id 
  AND sms.snapshot_date = CURRENT_DATE
LEFT JOIN stock_ai_insights sai ON am.id = sai.asset_id 
  AND sai.insight_date = CURRENT_DATE
LEFT JOIN stock_fundamentals_quarterly sfq ON am.id = sfq.asset_id 
  AND sfq.quarter_date = (
    SELECT MAX(quarter_date) 
    FROM stock_fundamentals_quarterly 
    WHERE asset_id = am.id
  )
WHERE am.asset_type = 'STOCK';

-- 7. EXTENSÃO DA TABELA user_profiles (Module Selector)
ALTER TABLE user_profiles 
ADD COLUMN IF NOT EXISTS preferred_module TEXT DEFAULT 'etfs' CHECK (preferred_module IN ('etfs', 'stocks'));

-- =====================================================================
-- ÍNDICES OTIMIZADOS (Criados APÓS as tabelas)
-- =====================================================================

-- Assets Master
CREATE INDEX IF NOT EXISTS idx_assets_master_ticker ON assets_master(ticker);
CREATE INDEX IF NOT EXISTS idx_assets_master_asset_type ON assets_master(asset_type);
CREATE INDEX IF NOT EXISTS idx_assets_master_sector ON assets_master(sector);
CREATE INDEX IF NOT EXISTS idx_assets_master_exchange ON assets_master(exchange);

-- Stock Prices Daily
CREATE INDEX IF NOT EXISTS idx_stock_prices_daily_asset_date ON stock_prices_daily(asset_id, date DESC);
CREATE INDEX IF NOT EXISTS idx_stock_prices_daily_date ON stock_prices_daily(date DESC);
CREATE INDEX IF NOT EXISTS idx_stock_prices_daily_volume ON stock_prices_daily(volume DESC);

-- Stock Metrics Snapshot (Screener Performance)
CREATE INDEX IF NOT EXISTS idx_stock_metrics_asset_snapshot ON stock_metrics_snapshot(asset_id, snapshot_date DESC);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_returns_12m ON stock_metrics_snapshot(returns_12m DESC);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_volatility_12m ON stock_metrics_snapshot(volatility_12m);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_sharpe_12m ON stock_metrics_snapshot(sharpe_12m DESC);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_market_cap ON stock_metrics_snapshot(market_cap DESC);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_dividend_yield ON stock_metrics_snapshot(dividend_yield_12m DESC);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_pe_ratio ON stock_metrics_snapshot(pe_ratio);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_quality_score ON stock_metrics_snapshot(quality_score DESC);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_size_category ON stock_metrics_snapshot(size_category);
CREATE INDEX IF NOT EXISTS idx_stock_metrics_calculated_at ON stock_metrics_snapshot(calculated_at DESC);

-- Stock Fundamentals Quarterly
CREATE INDEX IF NOT EXISTS idx_stock_fundamentals_asset_quarter ON stock_fundamentals_quarterly(asset_id, quarter_date DESC);
CREATE INDEX IF NOT EXISTS idx_stock_fundamentals_pe_ratio ON stock_fundamentals_quarterly(pe_ratio);
CREATE INDEX IF NOT EXISTS idx_stock_fundamentals_roe ON stock_fundamentals_quarterly(roe DESC);
CREATE INDEX IF NOT EXISTS idx_stock_fundamentals_revenue_growth ON stock_fundamentals_quarterly(revenue_growth_yoy DESC);

-- Stock AI Insights
CREATE INDEX IF NOT EXISTS idx_stock_ai_insights_asset_date ON stock_ai_insights(asset_id, insight_date DESC);
CREATE INDEX IF NOT EXISTS idx_stock_ai_insights_quality_score ON stock_ai_insights(ai_quality_score DESC);
CREATE INDEX IF NOT EXISTS idx_stock_ai_insights_generated_at ON stock_ai_insights(generated_at DESC);

-- Índices GIN para JSONB (Performance em queries JSON)
CREATE INDEX IF NOT EXISTS idx_stock_metrics_source_meta_gin ON stock_metrics_snapshot USING gin(source_meta);
CREATE INDEX IF NOT EXISTS idx_stock_ai_insights_json_gin ON stock_ai_insights USING gin(ai_insights_json);
CREATE INDEX IF NOT EXISTS idx_stock_ai_context_json_gin ON stock_ai_insights USING gin(ai_context_json);

-- =====================================================================
-- COMENTÁRIOS E DOCUMENTAÇÃO
-- =====================================================================

COMMENT ON TABLE assets_master IS 'Tabela master compartilhada entre ETFs e Stocks para normalização';
COMMENT ON TABLE stock_prices_daily IS 'Série temporal de preços diários otimizada para performance';
COMMENT ON TABLE stock_metrics_snapshot IS 'Métricas calculadas diariamente para Screener e Rankings';
COMMENT ON TABLE stock_fundamentals_quarterly IS 'Dados fundamentalistas trimestrais separados por performance';
COMMENT ON TABLE stock_ai_insights IS 'Insights de IA via Perplexity compatível com estrutura ETFs';
COMMENT ON MATERIALIZED VIEW stocks_ativos_reais IS 'View materializada compatível com etfs_ativos_reais para reuso de código';

-- =====================================================================
-- AUDITORIA E LOGS
-- =====================================================================

-- Log da criação do schema
INSERT INTO database_audit_log (
  audit_type, table_name, operation, message, metadata, performed_by
) VALUES (
  'SCHEMA_CREATION',
  'stocks_module',
  'CREATE',
  'Criação completa do módulo de ações americanas - schema normalizado',
  jsonb_build_object(
    'tables_created', ARRAY['assets_master', 'stock_prices_daily', 'stock_metrics_snapshot', 'stock_fundamentals_quarterly', 'stock_ai_insights'],
    'materialized_view', 'stocks_ativos_reais',
    'indexes_created', 25,
    'compatible_with', 'etfs_ativos_reais',
    'sources', ARRAY['yfinance', 'perplexity_ai'],
    'implementation_date', CURRENT_DATE
  ),
  'mcp_implementation_agent'
);

-- =====================================================================
-- FINALIZAÇÃO
-- =====================================================================
-- Schema normalizado criado com sucesso
-- Compatível com etfs_ativos_reais via Materialized View
-- Otimizado para Screener, Rankings, Portfolio Master
-- Auditoria completa implementada
-- Pronto para FASE 3: ETL yfinance
-- =====================================================================


